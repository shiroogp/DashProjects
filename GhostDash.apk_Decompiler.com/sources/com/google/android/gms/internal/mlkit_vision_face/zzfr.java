package com.google.android.gms.internal.mlkit_vision_face;

import com.google.firebase.encoders.FieldDescriptor;
import com.google.firebase.encoders.ObjectEncoder;
import com.google.firebase.encoders.ObjectEncoderContext;
import java.io.IOException;

/* compiled from: com.google.android.gms:play-services-mlkit-face-detection@@16.2.0 */
final class zzfr implements ObjectEncoder<zziw> {
    private static final FieldDescriptor zzA;
    private static final FieldDescriptor zzB;
    private static final FieldDescriptor zzC;
    private static final FieldDescriptor zzD;
    private static final FieldDescriptor zzE;
    private static final FieldDescriptor zzF;
    private static final FieldDescriptor zzG;
    private static final FieldDescriptor zzH;
    private static final FieldDescriptor zzI;
    private static final FieldDescriptor zzJ;
    private static final FieldDescriptor zzK;
    private static final FieldDescriptor zzL;
    private static final FieldDescriptor zzM;
    private static final FieldDescriptor zzN;
    private static final FieldDescriptor zzO;
    private static final FieldDescriptor zzP;
    private static final FieldDescriptor zzQ;
    private static final FieldDescriptor zzR;
    private static final FieldDescriptor zzS;
    private static final FieldDescriptor zzT;
    private static final FieldDescriptor zzU;
    private static final FieldDescriptor zzV;
    private static final FieldDescriptor zzW;
    private static final FieldDescriptor zzX;
    private static final FieldDescriptor zzY;
    private static final FieldDescriptor zzZ;
    static final zzfr zza = new zzfr();
    private static final FieldDescriptor zzaa;
    private static final FieldDescriptor zzab;
    private static final FieldDescriptor zzac;
    private static final FieldDescriptor zzad;
    private static final FieldDescriptor zzae;
    private static final FieldDescriptor zzaf;
    private static final FieldDescriptor zzb;
    private static final FieldDescriptor zzc;
    private static final FieldDescriptor zzd;
    private static final FieldDescriptor zze;
    private static final FieldDescriptor zzf;
    private static final FieldDescriptor zzg;
    private static final FieldDescriptor zzh;
    private static final FieldDescriptor zzi;
    private static final FieldDescriptor zzj;
    private static final FieldDescriptor zzk;
    private static final FieldDescriptor zzl;
    private static final FieldDescriptor zzm;
    private static final FieldDescriptor zzn;
    private static final FieldDescriptor zzo;
    private static final FieldDescriptor zzp;
    private static final FieldDescriptor zzq;
    private static final FieldDescriptor zzr;
    private static final FieldDescriptor zzs;
    private static final FieldDescriptor zzt;
    private static final FieldDescriptor zzu;
    private static final FieldDescriptor zzv;
    private static final FieldDescriptor zzw;
    private static final FieldDescriptor zzx;
    private static final FieldDescriptor zzy;
    private static final FieldDescriptor zzz;

    static {
        FieldDescriptor.Builder builder = FieldDescriptor.builder("systemInfo");
        zzch zzch = new zzch();
        zzch.zza(1);
        zzb = builder.withProperty(zzch.zzb()).build();
        FieldDescriptor.Builder builder2 = FieldDescriptor.builder("eventName");
        zzch zzch2 = new zzch();
        zzch2.zza(2);
        zzc = builder2.withProperty(zzch2.zzb()).build();
        FieldDescriptor.Builder builder3 = FieldDescriptor.builder("isThickClient");
        zzch zzch3 = new zzch();
        zzch3.zza(37);
        zzd = builder3.withProperty(zzch3.zzb()).build();
        FieldDescriptor.Builder builder4 = FieldDescriptor.builder("modelDownloadLogEvent");
        zzch zzch4 = new zzch();
        zzch4.zza(3);
        zze = builder4.withProperty(zzch4.zzb()).build();
        FieldDescriptor.Builder builder5 = FieldDescriptor.builder("customModelLoadLogEvent");
        zzch zzch5 = new zzch();
        zzch5.zza(20);
        zzf = builder5.withProperty(zzch5.zzb()).build();
        FieldDescriptor.Builder builder6 = FieldDescriptor.builder("customModelInferenceLogEvent");
        zzch zzch6 = new zzch();
        zzch6.zza(4);
        zzg = builder6.withProperty(zzch6.zzb()).build();
        FieldDescriptor.Builder builder7 = FieldDescriptor.builder("customModelCreateLogEvent");
        zzch zzch7 = new zzch();
        zzch7.zza(29);
        zzh = builder7.withProperty(zzch7.zzb()).build();
        FieldDescriptor.Builder builder8 = FieldDescriptor.builder("onDeviceFaceDetectionLogEvent");
        zzch zzch8 = new zzch();
        zzch8.zza(5);
        zzi = builder8.withProperty(zzch8.zzb()).build();
        FieldDescriptor.Builder builder9 = FieldDescriptor.builder("onDeviceFaceLoadLogEvent");
        zzch zzch9 = new zzch();
        zzch9.zza(59);
        zzj = builder9.withProperty(zzch9.zzb()).build();
        FieldDescriptor.Builder builder10 = FieldDescriptor.builder("onDeviceTextDetectionLogEvent");
        zzch zzch10 = new zzch();
        zzch10.zza(6);
        zzk = builder10.withProperty(zzch10.zzb()).build();
        FieldDescriptor.Builder builder11 = FieldDescriptor.builder("onDeviceBarcodeDetectionLogEvent");
        zzch zzch11 = new zzch();
        zzch11.zza(7);
        zzl = builder11.withProperty(zzch11.zzb()).build();
        FieldDescriptor.Builder builder12 = FieldDescriptor.builder("onDeviceBarcodeLoadLogEvent");
        zzch zzch12 = new zzch();
        zzch12.zza(58);
        zzm = builder12.withProperty(zzch12.zzb()).build();
        FieldDescriptor.Builder builder13 = FieldDescriptor.builder("onDeviceImageLabelCreateLogEvent");
        zzch zzch13 = new zzch();
        zzch13.zza(48);
        zzn = builder13.withProperty(zzch13.zzb()).build();
        FieldDescriptor.Builder builder14 = FieldDescriptor.builder("onDeviceImageLabelLoadLogEvent");
        zzch zzch14 = new zzch();
        zzch14.zza(49);
        zzo = builder14.withProperty(zzch14.zzb()).build();
        FieldDescriptor.Builder builder15 = FieldDescriptor.builder("onDeviceImageLabelDetectionLogEvent");
        zzch zzch15 = new zzch();
        zzch15.zza(18);
        zzp = builder15.withProperty(zzch15.zzb()).build();
        FieldDescriptor.Builder builder16 = FieldDescriptor.builder("onDeviceObjectCreateLogEvent");
        zzch zzch16 = new zzch();
        zzch16.zza(26);
        zzq = builder16.withProperty(zzch16.zzb()).build();
        FieldDescriptor.Builder builder17 = FieldDescriptor.builder("onDeviceObjectLoadLogEvent");
        zzch zzch17 = new zzch();
        zzch17.zza(27);
        zzr = builder17.withProperty(zzch17.zzb()).build();
        FieldDescriptor.Builder builder18 = FieldDescriptor.builder("onDeviceObjectInferenceLogEvent");
        zzch zzch18 = new zzch();
        zzch18.zza(28);
        zzs = builder18.withProperty(zzch18.zzb()).build();
        FieldDescriptor.Builder builder19 = FieldDescriptor.builder("onDevicePoseDetectionLogEvent");
        zzch zzch19 = new zzch();
        zzch19.zza(44);
        zzt = builder19.withProperty(zzch19.zzb()).build();
        FieldDescriptor.Builder builder20 = FieldDescriptor.builder("onDeviceSegmentationLogEvent");
        zzch zzch20 = new zzch();
        zzch20.zza(45);
        zzu = builder20.withProperty(zzch20.zzb()).build();
        FieldDescriptor.Builder builder21 = FieldDescriptor.builder("onDeviceSmartReplyLogEvent");
        zzch zzch21 = new zzch();
        zzch21.zza(19);
        zzv = builder21.withProperty(zzch21.zzb()).build();
        FieldDescriptor.Builder builder22 = FieldDescriptor.builder("onDeviceLanguageIdentificationLogEvent");
        zzch zzch22 = new zzch();
        zzch22.zza(21);
        zzw = builder22.withProperty(zzch22.zzb()).build();
        FieldDescriptor.Builder builder23 = FieldDescriptor.builder("onDeviceTranslationLogEvent");
        zzch zzch23 = new zzch();
        zzch23.zza(22);
        zzx = builder23.withProperty(zzch23.zzb()).build();
        FieldDescriptor.Builder builder24 = FieldDescriptor.builder("cloudFaceDetectionLogEvent");
        zzch zzch24 = new zzch();
        zzch24.zza(8);
        zzy = builder24.withProperty(zzch24.zzb()).build();
        FieldDescriptor.Builder builder25 = FieldDescriptor.builder("cloudCropHintDetectionLogEvent");
        zzch zzch25 = new zzch();
        zzch25.zza(9);
        zzz = builder25.withProperty(zzch25.zzb()).build();
        FieldDescriptor.Builder builder26 = FieldDescriptor.builder("cloudDocumentTextDetectionLogEvent");
        zzch zzch26 = new zzch();
        zzch26.zza(10);
        zzA = builder26.withProperty(zzch26.zzb()).build();
        FieldDescriptor.Builder builder27 = FieldDescriptor.builder("cloudImagePropertiesDetectionLogEvent");
        zzch zzch27 = new zzch();
        zzch27.zza(11);
        zzB = builder27.withProperty(zzch27.zzb()).build();
        FieldDescriptor.Builder builder28 = FieldDescriptor.builder("cloudImageLabelDetectionLogEvent");
        zzch zzch28 = new zzch();
        zzch28.zza(12);
        zzC = builder28.withProperty(zzch28.zzb()).build();
        FieldDescriptor.Builder builder29 = FieldDescriptor.builder("cloudLandmarkDetectionLogEvent");
        zzch zzch29 = new zzch();
        zzch29.zza(13);
        zzD = builder29.withProperty(zzch29.zzb()).build();
        FieldDescriptor.Builder builder30 = FieldDescriptor.builder("cloudLogoDetectionLogEvent");
        zzch zzch30 = new zzch();
        zzch30.zza(14);
        zzE = builder30.withProperty(zzch30.zzb()).build();
        FieldDescriptor.Builder builder31 = FieldDescriptor.builder("cloudSafeSearchDetectionLogEvent");
        zzch zzch31 = new zzch();
        zzch31.zza(15);
        zzF = builder31.withProperty(zzch31.zzb()).build();
        FieldDescriptor.Builder builder32 = FieldDescriptor.builder("cloudTextDetectionLogEvent");
        zzch zzch32 = new zzch();
        zzch32.zza(16);
        zzG = builder32.withProperty(zzch32.zzb()).build();
        FieldDescriptor.Builder builder33 = FieldDescriptor.builder("cloudWebSearchDetectionLogEvent");
        zzch zzch33 = new zzch();
        zzch33.zza(17);
        zzH = builder33.withProperty(zzch33.zzb()).build();
        FieldDescriptor.Builder builder34 = FieldDescriptor.builder("automlImageLabelingCreateLogEvent");
        zzch zzch34 = new zzch();
        zzch34.zza(23);
        zzI = builder34.withProperty(zzch34.zzb()).build();
        FieldDescriptor.Builder builder35 = FieldDescriptor.builder("automlImageLabelingLoadLogEvent");
        zzch zzch35 = new zzch();
        zzch35.zza(24);
        zzJ = builder35.withProperty(zzch35.zzb()).build();
        FieldDescriptor.Builder builder36 = FieldDescriptor.builder("automlImageLabelingInferenceLogEvent");
        zzch zzch36 = new zzch();
        zzch36.zza(25);
        zzK = builder36.withProperty(zzch36.zzb()).build();
        FieldDescriptor.Builder builder37 = FieldDescriptor.builder("isModelDownloadedLogEvent");
        zzch zzch37 = new zzch();
        zzch37.zza(39);
        zzL = builder37.withProperty(zzch37.zzb()).build();
        FieldDescriptor.Builder builder38 = FieldDescriptor.builder("deleteModelLogEvent");
        zzch zzch38 = new zzch();
        zzch38.zza(40);
        zzM = builder38.withProperty(zzch38.zzb()).build();
        FieldDescriptor.Builder builder39 = FieldDescriptor.builder("aggregatedAutomlImageLabelingInferenceLogEvent");
        zzch zzch39 = new zzch();
        zzch39.zza(30);
        zzN = builder39.withProperty(zzch39.zzb()).build();
        FieldDescriptor.Builder builder40 = FieldDescriptor.builder("aggregatedCustomModelInferenceLogEvent");
        zzch zzch40 = new zzch();
        zzch40.zza(31);
        zzO = builder40.withProperty(zzch40.zzb()).build();
        FieldDescriptor.Builder builder41 = FieldDescriptor.builder("aggregatedOnDeviceFaceDetectionLogEvent");
        zzch zzch41 = new zzch();
        zzch41.zza(32);
        zzP = builder41.withProperty(zzch41.zzb()).build();
        FieldDescriptor.Builder builder42 = FieldDescriptor.builder("aggregatedOnDeviceBarcodeDetectionLogEvent");
        zzch zzch42 = new zzch();
        zzch42.zza(33);
        zzQ = builder42.withProperty(zzch42.zzb()).build();
        FieldDescriptor.Builder builder43 = FieldDescriptor.builder("aggregatedOnDeviceImageLabelDetectionLogEvent");
        zzch zzch43 = new zzch();
        zzch43.zza(34);
        zzR = builder43.withProperty(zzch43.zzb()).build();
        FieldDescriptor.Builder builder44 = FieldDescriptor.builder("aggregatedOnDeviceObjectInferenceLogEvent");
        zzch zzch44 = new zzch();
        zzch44.zza(35);
        zzS = builder44.withProperty(zzch44.zzb()).build();
        FieldDescriptor.Builder builder45 = FieldDescriptor.builder("aggregatedOnDeviceTextDetectionLogEvent");
        zzch zzch45 = new zzch();
        zzch45.zza(36);
        zzT = builder45.withProperty(zzch45.zzb()).build();
        FieldDescriptor.Builder builder46 = FieldDescriptor.builder("aggregatedOnDevicePoseDetectionLogEvent");
        zzch zzch46 = new zzch();
        zzch46.zza(46);
        zzU = builder46.withProperty(zzch46.zzb()).build();
        FieldDescriptor.Builder builder47 = FieldDescriptor.builder("aggregatedOnDeviceSegmentationLogEvent");
        zzch zzch47 = new zzch();
        zzch47.zza(47);
        zzV = builder47.withProperty(zzch47.zzb()).build();
        FieldDescriptor.Builder builder48 = FieldDescriptor.builder("remoteConfigLogEvent");
        zzch zzch48 = new zzch();
        zzch48.zza(42);
        zzW = builder48.withProperty(zzch48.zzb()).build();
        FieldDescriptor.Builder builder49 = FieldDescriptor.builder("inputImageConstructionLogEvent");
        zzch zzch49 = new zzch();
        zzch49.zza(50);
        zzX = builder49.withProperty(zzch49.zzb()).build();
        FieldDescriptor.Builder builder50 = FieldDescriptor.builder("leakedHandleEvent");
        zzch zzch50 = new zzch();
        zzch50.zza(51);
        zzY = builder50.withProperty(zzch50.zzb()).build();
        FieldDescriptor.Builder builder51 = FieldDescriptor.builder("cameraSourceLogEvent");
        zzch zzch51 = new zzch();
        zzch51.zza(52);
        zzZ = builder51.withProperty(zzch51.zzb()).build();
        FieldDescriptor.Builder builder52 = FieldDescriptor.builder("imageLabelOptionalModuleLogEvent");
        zzch zzch52 = new zzch();
        zzch52.zza(53);
        zzaa = builder52.withProperty(zzch52.zzb()).build();
        FieldDescriptor.Builder builder53 = FieldDescriptor.builder("languageIdentificationOptionalModuleLogEvent");
        zzch zzch53 = new zzch();
        zzch53.zza(54);
        zzab = builder53.withProperty(zzch53.zzb()).build();
        FieldDescriptor.Builder builder54 = FieldDescriptor.builder("faceDetectionOptionalModuleLogEvent");
        zzch zzch54 = new zzch();
        zzch54.zza(60);
        zzac = builder54.withProperty(zzch54.zzb()).build();
        FieldDescriptor.Builder builder55 = FieldDescriptor.builder("nlClassifierOptionalModuleLogEvent");
        zzch zzch55 = new zzch();
        zzch55.zza(55);
        zzad = builder55.withProperty(zzch55.zzb()).build();
        FieldDescriptor.Builder builder56 = FieldDescriptor.builder("nlClassifierClientLibraryLogEvent");
        zzch zzch56 = new zzch();
        zzch56.zza(56);
        zzae = builder56.withProperty(zzch56.zzb()).build();
        FieldDescriptor.Builder builder57 = FieldDescriptor.builder("accelerationAllowlistLogEvent");
        zzch zzch57 = new zzch();
        zzch57.zza(57);
        zzaf = builder57.withProperty(zzch57.zzb()).build();
    }

    private zzfr() {
    }

    public final /* bridge */ /* synthetic */ void encode(Object obj, Object obj2) throws IOException {
        zziw zziw = (zziw) obj;
        ObjectEncoderContext objectEncoderContext = (ObjectEncoderContext) obj2;
        objectEncoderContext.add(zzb, (Object) zziw.zze());
        objectEncoderContext.add(zzc, (Object) zziw.zzb());
        objectEncoderContext.add(zzd, (Object) zziw.zzf());
        objectEncoderContext.add(zze, (Object) null);
        objectEncoderContext.add(zzf, (Object) null);
        objectEncoderContext.add(zzg, (Object) null);
        objectEncoderContext.add(zzh, (Object) null);
        objectEncoderContext.add(zzi, (Object) zziw.zzc());
        objectEncoderContext.add(zzj, (Object) zziw.zzd());
        objectEncoderContext.add(zzk, (Object) null);
        objectEncoderContext.add(zzl, (Object) null);
        objectEncoderContext.add(zzm, (Object) null);
        objectEncoderContext.add(zzn, (Object) null);
        objectEncoderContext.add(zzo, (Object) null);
        objectEncoderContext.add(zzp, (Object) null);
        objectEncoderContext.add(zzq, (Object) null);
        objectEncoderContext.add(zzr, (Object) null);
        objectEncoderContext.add(zzs, (Object) null);
        objectEncoderContext.add(zzt, (Object) null);
        objectEncoderContext.add(zzu, (Object) null);
        objectEncoderContext.add(zzv, (Object) null);
        objectEncoderContext.add(zzw, (Object) null);
        objectEncoderContext.add(zzx, (Object) null);
        objectEncoderContext.add(zzy, (Object) null);
        objectEncoderContext.add(zzz, (Object) null);
        objectEncoderContext.add(zzA, (Object) null);
        objectEncoderContext.add(zzB, (Object) null);
        objectEncoderContext.add(zzC, (Object) null);
        objectEncoderContext.add(zzD, (Object) null);
        objectEncoderContext.add(zzE, (Object) null);
        objectEncoderContext.add(zzF, (Object) null);
        objectEncoderContext.add(zzG, (Object) null);
        objectEncoderContext.add(zzH, (Object) null);
        objectEncoderContext.add(zzI, (Object) null);
        objectEncoderContext.add(zzJ, (Object) null);
        objectEncoderContext.add(zzK, (Object) null);
        objectEncoderContext.add(zzL, (Object) null);
        objectEncoderContext.add(zzM, (Object) null);
        objectEncoderContext.add(zzN, (Object) null);
        objectEncoderContext.add(zzO, (Object) null);
        objectEncoderContext.add(zzP, (Object) zziw.zza());
        objectEncoderContext.add(zzQ, (Object) null);
        objectEncoderContext.add(zzR, (Object) null);
        objectEncoderContext.add(zzS, (Object) null);
        objectEncoderContext.add(zzT, (Object) null);
        objectEncoderContext.add(zzU, (Object) null);
        objectEncoderContext.add(zzV, (Object) null);
        objectEncoderContext.add(zzW, (Object) null);
        objectEncoderContext.add(zzX, (Object) null);
        objectEncoderContext.add(zzY, (Object) null);
        objectEncoderContext.add(zzZ, (Object) null);
        objectEncoderContext.add(zzaa, (Object) null);
        objectEncoderContext.add(zzab, (Object) null);
        objectEncoderContext.add(zzac, (Object) null);
        objectEncoderContext.add(zzad, (Object) null);
        objectEncoderContext.add(zzae, (Object) null);
        objectEncoderContext.add(zzaf, (Object) null);
    }
}
