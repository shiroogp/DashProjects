package com.google.android.gms.internal.mlkit_common;

import com.google.firebase.encoders.FieldDescriptor;
import com.google.firebase.encoders.ObjectEncoder;
import com.google.firebase.encoders.ObjectEncoderContext;
import java.io.IOException;

/* compiled from: com.google.mlkit:common@@17.2.0 */
final class zzdz implements ObjectEncoder<zzgy> {
    private static final FieldDescriptor zzA;
    private static final FieldDescriptor zzB;
    private static final FieldDescriptor zzC;
    private static final FieldDescriptor zzD;
    private static final FieldDescriptor zzE;
    private static final FieldDescriptor zzF;
    private static final FieldDescriptor zzG;
    private static final FieldDescriptor zzH;
    private static final FieldDescriptor zzI;
    private static final FieldDescriptor zzJ;
    private static final FieldDescriptor zzK;
    private static final FieldDescriptor zzL;
    private static final FieldDescriptor zzM;
    private static final FieldDescriptor zzN;
    private static final FieldDescriptor zzO;
    private static final FieldDescriptor zzP;
    private static final FieldDescriptor zzQ;
    private static final FieldDescriptor zzR;
    private static final FieldDescriptor zzS;
    private static final FieldDescriptor zzT;
    private static final FieldDescriptor zzU;
    private static final FieldDescriptor zzV;
    private static final FieldDescriptor zzW;
    private static final FieldDescriptor zzX;
    private static final FieldDescriptor zzY;
    private static final FieldDescriptor zzZ;
    static final zzdz zza = new zzdz();
    private static final FieldDescriptor zzaa;
    private static final FieldDescriptor zzab;
    private static final FieldDescriptor zzac;
    private static final FieldDescriptor zzad;
    private static final FieldDescriptor zzae;
    private static final FieldDescriptor zzaf;
    private static final FieldDescriptor zzb;
    private static final FieldDescriptor zzc;
    private static final FieldDescriptor zzd;
    private static final FieldDescriptor zze;
    private static final FieldDescriptor zzf;
    private static final FieldDescriptor zzg;
    private static final FieldDescriptor zzh;
    private static final FieldDescriptor zzi;
    private static final FieldDescriptor zzj;
    private static final FieldDescriptor zzk;
    private static final FieldDescriptor zzl;
    private static final FieldDescriptor zzm;
    private static final FieldDescriptor zzn;
    private static final FieldDescriptor zzo;
    private static final FieldDescriptor zzp;
    private static final FieldDescriptor zzq;
    private static final FieldDescriptor zzr;
    private static final FieldDescriptor zzs;
    private static final FieldDescriptor zzt;
    private static final FieldDescriptor zzu;
    private static final FieldDescriptor zzv;
    private static final FieldDescriptor zzw;
    private static final FieldDescriptor zzx;
    private static final FieldDescriptor zzy;
    private static final FieldDescriptor zzz;

    static {
        FieldDescriptor.Builder builder = FieldDescriptor.builder("systemInfo");
        zzas zzas = new zzas();
        zzas.zza(1);
        zzb = builder.withProperty(zzas.zzb()).build();
        FieldDescriptor.Builder builder2 = FieldDescriptor.builder("eventName");
        zzas zzas2 = new zzas();
        zzas2.zza(2);
        zzc = builder2.withProperty(zzas2.zzb()).build();
        FieldDescriptor.Builder builder3 = FieldDescriptor.builder("isThickClient");
        zzas zzas3 = new zzas();
        zzas3.zza(37);
        zzd = builder3.withProperty(zzas3.zzb()).build();
        FieldDescriptor.Builder builder4 = FieldDescriptor.builder("modelDownloadLogEvent");
        zzas zzas4 = new zzas();
        zzas4.zza(3);
        zze = builder4.withProperty(zzas4.zzb()).build();
        FieldDescriptor.Builder builder5 = FieldDescriptor.builder("customModelLoadLogEvent");
        zzas zzas5 = new zzas();
        zzas5.zza(20);
        zzf = builder5.withProperty(zzas5.zzb()).build();
        FieldDescriptor.Builder builder6 = FieldDescriptor.builder("customModelInferenceLogEvent");
        zzas zzas6 = new zzas();
        zzas6.zza(4);
        zzg = builder6.withProperty(zzas6.zzb()).build();
        FieldDescriptor.Builder builder7 = FieldDescriptor.builder("customModelCreateLogEvent");
        zzas zzas7 = new zzas();
        zzas7.zza(29);
        zzh = builder7.withProperty(zzas7.zzb()).build();
        FieldDescriptor.Builder builder8 = FieldDescriptor.builder("onDeviceFaceDetectionLogEvent");
        zzas zzas8 = new zzas();
        zzas8.zza(5);
        zzi = builder8.withProperty(zzas8.zzb()).build();
        FieldDescriptor.Builder builder9 = FieldDescriptor.builder("onDeviceFaceLoadLogEvent");
        zzas zzas9 = new zzas();
        zzas9.zza(59);
        zzj = builder9.withProperty(zzas9.zzb()).build();
        FieldDescriptor.Builder builder10 = FieldDescriptor.builder("onDeviceTextDetectionLogEvent");
        zzas zzas10 = new zzas();
        zzas10.zza(6);
        zzk = builder10.withProperty(zzas10.zzb()).build();
        FieldDescriptor.Builder builder11 = FieldDescriptor.builder("onDeviceBarcodeDetectionLogEvent");
        zzas zzas11 = new zzas();
        zzas11.zza(7);
        zzl = builder11.withProperty(zzas11.zzb()).build();
        FieldDescriptor.Builder builder12 = FieldDescriptor.builder("onDeviceBarcodeLoadLogEvent");
        zzas zzas12 = new zzas();
        zzas12.zza(58);
        zzm = builder12.withProperty(zzas12.zzb()).build();
        FieldDescriptor.Builder builder13 = FieldDescriptor.builder("onDeviceImageLabelCreateLogEvent");
        zzas zzas13 = new zzas();
        zzas13.zza(48);
        zzn = builder13.withProperty(zzas13.zzb()).build();
        FieldDescriptor.Builder builder14 = FieldDescriptor.builder("onDeviceImageLabelLoadLogEvent");
        zzas zzas14 = new zzas();
        zzas14.zza(49);
        zzo = builder14.withProperty(zzas14.zzb()).build();
        FieldDescriptor.Builder builder15 = FieldDescriptor.builder("onDeviceImageLabelDetectionLogEvent");
        zzas zzas15 = new zzas();
        zzas15.zza(18);
        zzp = builder15.withProperty(zzas15.zzb()).build();
        FieldDescriptor.Builder builder16 = FieldDescriptor.builder("onDeviceObjectCreateLogEvent");
        zzas zzas16 = new zzas();
        zzas16.zza(26);
        zzq = builder16.withProperty(zzas16.zzb()).build();
        FieldDescriptor.Builder builder17 = FieldDescriptor.builder("onDeviceObjectLoadLogEvent");
        zzas zzas17 = new zzas();
        zzas17.zza(27);
        zzr = builder17.withProperty(zzas17.zzb()).build();
        FieldDescriptor.Builder builder18 = FieldDescriptor.builder("onDeviceObjectInferenceLogEvent");
        zzas zzas18 = new zzas();
        zzas18.zza(28);
        zzs = builder18.withProperty(zzas18.zzb()).build();
        FieldDescriptor.Builder builder19 = FieldDescriptor.builder("onDevicePoseDetectionLogEvent");
        zzas zzas19 = new zzas();
        zzas19.zza(44);
        zzt = builder19.withProperty(zzas19.zzb()).build();
        FieldDescriptor.Builder builder20 = FieldDescriptor.builder("onDeviceSegmentationLogEvent");
        zzas zzas20 = new zzas();
        zzas20.zza(45);
        zzu = builder20.withProperty(zzas20.zzb()).build();
        FieldDescriptor.Builder builder21 = FieldDescriptor.builder("onDeviceSmartReplyLogEvent");
        zzas zzas21 = new zzas();
        zzas21.zza(19);
        zzv = builder21.withProperty(zzas21.zzb()).build();
        FieldDescriptor.Builder builder22 = FieldDescriptor.builder("onDeviceLanguageIdentificationLogEvent");
        zzas zzas22 = new zzas();
        zzas22.zza(21);
        zzw = builder22.withProperty(zzas22.zzb()).build();
        FieldDescriptor.Builder builder23 = FieldDescriptor.builder("onDeviceTranslationLogEvent");
        zzas zzas23 = new zzas();
        zzas23.zza(22);
        zzx = builder23.withProperty(zzas23.zzb()).build();
        FieldDescriptor.Builder builder24 = FieldDescriptor.builder("cloudFaceDetectionLogEvent");
        zzas zzas24 = new zzas();
        zzas24.zza(8);
        zzy = builder24.withProperty(zzas24.zzb()).build();
        FieldDescriptor.Builder builder25 = FieldDescriptor.builder("cloudCropHintDetectionLogEvent");
        zzas zzas25 = new zzas();
        zzas25.zza(9);
        zzz = builder25.withProperty(zzas25.zzb()).build();
        FieldDescriptor.Builder builder26 = FieldDescriptor.builder("cloudDocumentTextDetectionLogEvent");
        zzas zzas26 = new zzas();
        zzas26.zza(10);
        zzA = builder26.withProperty(zzas26.zzb()).build();
        FieldDescriptor.Builder builder27 = FieldDescriptor.builder("cloudImagePropertiesDetectionLogEvent");
        zzas zzas27 = new zzas();
        zzas27.zza(11);
        zzB = builder27.withProperty(zzas27.zzb()).build();
        FieldDescriptor.Builder builder28 = FieldDescriptor.builder("cloudImageLabelDetectionLogEvent");
        zzas zzas28 = new zzas();
        zzas28.zza(12);
        zzC = builder28.withProperty(zzas28.zzb()).build();
        FieldDescriptor.Builder builder29 = FieldDescriptor.builder("cloudLandmarkDetectionLogEvent");
        zzas zzas29 = new zzas();
        zzas29.zza(13);
        zzD = builder29.withProperty(zzas29.zzb()).build();
        FieldDescriptor.Builder builder30 = FieldDescriptor.builder("cloudLogoDetectionLogEvent");
        zzas zzas30 = new zzas();
        zzas30.zza(14);
        zzE = builder30.withProperty(zzas30.zzb()).build();
        FieldDescriptor.Builder builder31 = FieldDescriptor.builder("cloudSafeSearchDetectionLogEvent");
        zzas zzas31 = new zzas();
        zzas31.zza(15);
        zzF = builder31.withProperty(zzas31.zzb()).build();
        FieldDescriptor.Builder builder32 = FieldDescriptor.builder("cloudTextDetectionLogEvent");
        zzas zzas32 = new zzas();
        zzas32.zza(16);
        zzG = builder32.withProperty(zzas32.zzb()).build();
        FieldDescriptor.Builder builder33 = FieldDescriptor.builder("cloudWebSearchDetectionLogEvent");
        zzas zzas33 = new zzas();
        zzas33.zza(17);
        zzH = builder33.withProperty(zzas33.zzb()).build();
        FieldDescriptor.Builder builder34 = FieldDescriptor.builder("automlImageLabelingCreateLogEvent");
        zzas zzas34 = new zzas();
        zzas34.zza(23);
        zzI = builder34.withProperty(zzas34.zzb()).build();
        FieldDescriptor.Builder builder35 = FieldDescriptor.builder("automlImageLabelingLoadLogEvent");
        zzas zzas35 = new zzas();
        zzas35.zza(24);
        zzJ = builder35.withProperty(zzas35.zzb()).build();
        FieldDescriptor.Builder builder36 = FieldDescriptor.builder("automlImageLabelingInferenceLogEvent");
        zzas zzas36 = new zzas();
        zzas36.zza(25);
        zzK = builder36.withProperty(zzas36.zzb()).build();
        FieldDescriptor.Builder builder37 = FieldDescriptor.builder("isModelDownloadedLogEvent");
        zzas zzas37 = new zzas();
        zzas37.zza(39);
        zzL = builder37.withProperty(zzas37.zzb()).build();
        FieldDescriptor.Builder builder38 = FieldDescriptor.builder("deleteModelLogEvent");
        zzas zzas38 = new zzas();
        zzas38.zza(40);
        zzM = builder38.withProperty(zzas38.zzb()).build();
        FieldDescriptor.Builder builder39 = FieldDescriptor.builder("aggregatedAutomlImageLabelingInferenceLogEvent");
        zzas zzas39 = new zzas();
        zzas39.zza(30);
        zzN = builder39.withProperty(zzas39.zzb()).build();
        FieldDescriptor.Builder builder40 = FieldDescriptor.builder("aggregatedCustomModelInferenceLogEvent");
        zzas zzas40 = new zzas();
        zzas40.zza(31);
        zzO = builder40.withProperty(zzas40.zzb()).build();
        FieldDescriptor.Builder builder41 = FieldDescriptor.builder("aggregatedOnDeviceFaceDetectionLogEvent");
        zzas zzas41 = new zzas();
        zzas41.zza(32);
        zzP = builder41.withProperty(zzas41.zzb()).build();
        FieldDescriptor.Builder builder42 = FieldDescriptor.builder("aggregatedOnDeviceBarcodeDetectionLogEvent");
        zzas zzas42 = new zzas();
        zzas42.zza(33);
        zzQ = builder42.withProperty(zzas42.zzb()).build();
        FieldDescriptor.Builder builder43 = FieldDescriptor.builder("aggregatedOnDeviceImageLabelDetectionLogEvent");
        zzas zzas43 = new zzas();
        zzas43.zza(34);
        zzR = builder43.withProperty(zzas43.zzb()).build();
        FieldDescriptor.Builder builder44 = FieldDescriptor.builder("aggregatedOnDeviceObjectInferenceLogEvent");
        zzas zzas44 = new zzas();
        zzas44.zza(35);
        zzS = builder44.withProperty(zzas44.zzb()).build();
        FieldDescriptor.Builder builder45 = FieldDescriptor.builder("aggregatedOnDeviceTextDetectionLogEvent");
        zzas zzas45 = new zzas();
        zzas45.zza(36);
        zzT = builder45.withProperty(zzas45.zzb()).build();
        FieldDescriptor.Builder builder46 = FieldDescriptor.builder("aggregatedOnDevicePoseDetectionLogEvent");
        zzas zzas46 = new zzas();
        zzas46.zza(46);
        zzU = builder46.withProperty(zzas46.zzb()).build();
        FieldDescriptor.Builder builder47 = FieldDescriptor.builder("aggregatedOnDeviceSegmentationLogEvent");
        zzas zzas47 = new zzas();
        zzas47.zza(47);
        zzV = builder47.withProperty(zzas47.zzb()).build();
        FieldDescriptor.Builder builder48 = FieldDescriptor.builder("remoteConfigLogEvent");
        zzas zzas48 = new zzas();
        zzas48.zza(42);
        zzW = builder48.withProperty(zzas48.zzb()).build();
        FieldDescriptor.Builder builder49 = FieldDescriptor.builder("inputImageConstructionLogEvent");
        zzas zzas49 = new zzas();
        zzas49.zza(50);
        zzX = builder49.withProperty(zzas49.zzb()).build();
        FieldDescriptor.Builder builder50 = FieldDescriptor.builder("leakedHandleEvent");
        zzas zzas50 = new zzas();
        zzas50.zza(51);
        zzY = builder50.withProperty(zzas50.zzb()).build();
        FieldDescriptor.Builder builder51 = FieldDescriptor.builder("cameraSourceLogEvent");
        zzas zzas51 = new zzas();
        zzas51.zza(52);
        zzZ = builder51.withProperty(zzas51.zzb()).build();
        FieldDescriptor.Builder builder52 = FieldDescriptor.builder("imageLabelOptionalModuleLogEvent");
        zzas zzas52 = new zzas();
        zzas52.zza(53);
        zzaa = builder52.withProperty(zzas52.zzb()).build();
        FieldDescriptor.Builder builder53 = FieldDescriptor.builder("languageIdentificationOptionalModuleLogEvent");
        zzas zzas53 = new zzas();
        zzas53.zza(54);
        zzab = builder53.withProperty(zzas53.zzb()).build();
        FieldDescriptor.Builder builder54 = FieldDescriptor.builder("faceDetectionOptionalModuleLogEvent");
        zzas zzas54 = new zzas();
        zzas54.zza(60);
        zzac = builder54.withProperty(zzas54.zzb()).build();
        FieldDescriptor.Builder builder55 = FieldDescriptor.builder("nlClassifierOptionalModuleLogEvent");
        zzas zzas55 = new zzas();
        zzas55.zza(55);
        zzad = builder55.withProperty(zzas55.zzb()).build();
        FieldDescriptor.Builder builder56 = FieldDescriptor.builder("nlClassifierClientLibraryLogEvent");
        zzas zzas56 = new zzas();
        zzas56.zza(56);
        zzae = builder56.withProperty(zzas56.zzb()).build();
        FieldDescriptor.Builder builder57 = FieldDescriptor.builder("accelerationAllowlistLogEvent");
        zzas zzas57 = new zzas();
        zzas57.zza(57);
        zzaf = builder57.withProperty(zzas57.zzb()).build();
    }

    private zzdz() {
    }

    public final /* bridge */ /* synthetic */ void encode(Object obj, Object obj2) throws IOException {
        zzgy zzgy = (zzgy) obj;
        ObjectEncoderContext objectEncoderContext = (ObjectEncoderContext) obj2;
        objectEncoderContext.add(zzb, (Object) zzgy.zzf());
        objectEncoderContext.add(zzc, (Object) zzgy.zzd());
        objectEncoderContext.add(zzd, (Object) null);
        objectEncoderContext.add(zze, (Object) zzgy.zze());
        objectEncoderContext.add(zzf, (Object) null);
        objectEncoderContext.add(zzg, (Object) null);
        objectEncoderContext.add(zzh, (Object) null);
        objectEncoderContext.add(zzi, (Object) null);
        objectEncoderContext.add(zzj, (Object) null);
        objectEncoderContext.add(zzk, (Object) null);
        objectEncoderContext.add(zzl, (Object) null);
        objectEncoderContext.add(zzm, (Object) null);
        objectEncoderContext.add(zzn, (Object) null);
        objectEncoderContext.add(zzo, (Object) null);
        objectEncoderContext.add(zzp, (Object) null);
        objectEncoderContext.add(zzq, (Object) null);
        objectEncoderContext.add(zzr, (Object) null);
        objectEncoderContext.add(zzs, (Object) null);
        objectEncoderContext.add(zzt, (Object) null);
        objectEncoderContext.add(zzu, (Object) null);
        objectEncoderContext.add(zzv, (Object) null);
        objectEncoderContext.add(zzw, (Object) null);
        objectEncoderContext.add(zzx, (Object) null);
        objectEncoderContext.add(zzy, (Object) null);
        objectEncoderContext.add(zzz, (Object) null);
        objectEncoderContext.add(zzA, (Object) null);
        objectEncoderContext.add(zzB, (Object) null);
        objectEncoderContext.add(zzC, (Object) null);
        objectEncoderContext.add(zzD, (Object) null);
        objectEncoderContext.add(zzE, (Object) null);
        objectEncoderContext.add(zzF, (Object) null);
        objectEncoderContext.add(zzG, (Object) null);
        objectEncoderContext.add(zzH, (Object) null);
        objectEncoderContext.add(zzI, (Object) null);
        objectEncoderContext.add(zzJ, (Object) null);
        objectEncoderContext.add(zzK, (Object) null);
        objectEncoderContext.add(zzL, (Object) zzgy.zzb());
        objectEncoderContext.add(zzM, (Object) zzgy.zza());
        objectEncoderContext.add(zzN, (Object) null);
        objectEncoderContext.add(zzO, (Object) null);
        objectEncoderContext.add(zzP, (Object) null);
        objectEncoderContext.add(zzQ, (Object) null);
        objectEncoderContext.add(zzR, (Object) null);
        objectEncoderContext.add(zzS, (Object) null);
        objectEncoderContext.add(zzT, (Object) null);
        objectEncoderContext.add(zzU, (Object) null);
        objectEncoderContext.add(zzV, (Object) null);
        objectEncoderContext.add(zzW, (Object) null);
        objectEncoderContext.add(zzX, (Object) null);
        objectEncoderContext.add(zzY, (Object) zzgy.zzc());
        objectEncoderContext.add(zzZ, (Object) null);
        objectEncoderContext.add(zzaa, (Object) null);
        objectEncoderContext.add(zzab, (Object) null);
        objectEncoderContext.add(zzac, (Object) null);
        objectEncoderContext.add(zzad, (Object) null);
        objectEncoderContext.add(zzae, (Object) null);
        objectEncoderContext.add(zzaf, (Object) null);
    }
}
